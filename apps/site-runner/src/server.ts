// apps/site-runner/src/server.ts
// import "tsconfig-paths/register";
const path = require("path");
const fs = require("fs");
import { printServerStop } from "@scripts/printServerStop";

const pkgPath = path.resolve(__dirname, "../package.json");
const pkg = JSON.parse(fs.readFileSync(pkgPath, "utf-8"));
import express from "express";
import React from "react";
import ReactDOMServer from "react-dom/server";
import PageRenderer from "./PageRenderer";

const app = express();
const PORT = 4000;

app.get("/:siteDomain", async (req, res) => {
  const { siteDomain } = req.params;

  try {
    if (siteDomain !== "kyanchir.platform.com") {
      return res.status(404).send("–°–∞–π—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω");
    }
    const siteId = "kyanchir-site-id";

    const [siteRes, pageRes, productsRes] = await Promise.all([
      fetch(`http://localhost:3001/api/sites/${siteId}`),
      fetch(`http://localhost:3001/api/sites/${siteId}/pages/home`),
      fetch(`http://localhost:3001/api/sites/${siteId}/products`),
    ]);

    if (!siteRes.ok || !pageRes.ok || !productsRes.ok) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö —Å –±—ç–∫–µ–Ω–¥–∞:", {
        siteStatus: siteRes.status,
        pageStatus: pageRes.status,
        productsStatus: productsRes.status,
      });
      throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å –±—ç–∫–µ–Ω–¥–∞");
    }

    const site = await siteRes.json();
    const page = await pageRes.json();
    const products = await productsRes.json();

    const html = ReactDOMServer.renderToString(
      React.createElement(PageRenderer, { page, products, site })
    );

    res.send(`<!DOCTYPE html>${html}`);
  } catch (error) {
    console.error(error);
    res
      .status(500)
      .send(`–û—à–∏–±–∫–∞ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ —Å–∞–π—Ç–∞: ${(error as Error).message}`);
  }
});

app.listen(PORT, () => {
  console.log("\n" + "=".repeat(60));
  console.log(`üöÄ –°–ê–ô–¢ –ö–õ–ò–ï–ù–¢–ê KYANCHIR –ó–ê–ü–£–©–ï–ù`);
  console.log(`üü¢ –õ–æ–∫–∞–ª—å–Ω—ã–π –∞–¥—Ä–µ—Å:       http://localhost:${PORT}`);
  console.log(`üåê –î–æ–º–µ–Ω –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã:       kyanchir.ru`);
  console.log(`üì¶ –¢–∏–ø:                   SSR / —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–±–æ—Ä–∫–∞`);
  console.log(`üß© –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ —á–µ—Ä–µ–∑:       PageRenderer`);
  console.log(`üïí –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:  ${pkg.lastUpdated}`);
  console.log(`üß™ –í–µ—Ä—Å–∏—è –±–∏–ª–¥–∞:          v${pkg.version}`);
  console.log(`üì¨ –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å:        https://t.me/intragentt`);
  console.log(`üß† –°–æ–∑–¥–∞–Ω –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ:   NABLU–îATEL PLATFORM`);
  console.log("=".repeat(60) + "\n");
});

process.on("SIGINT", () => {
  printServerStop("kyanchir", pkg.lastUpdated, pkg.version);
  process.exit(0);
});
process.on("SIGTERM", () => {
  printServerStop("kyanchir", pkg.lastUpdated, pkg.version);
  process.exit(0);
});
