// ============================================================================
// routes/pages.ts - "СОТРУДНИК СПРАВОЧНОЙ" ПО КОНКРЕТНЫМ СТРАНИЦАМ
// ============================================================================
// Этот файл определяет ПУБЛИЧНЫЙ маршрут для получения данных
// одной конкретной страницы (например, "О нас" или "Контакты")
// для определенного сайта.
// ============================================================================

import { Router } from "express";
import { readFileSync } from "fs";
import { resolve } from "path";

const router = Router();
// ❗️ Вся логика работы с файлом должна быть вынесена в репозиторий.
//    Предполагается, что в этом файле лежат страницы для ВСЕХ сайтов.
const pagesFilePath = resolve(__dirname, "../db/pages.json");

// ============================================================================
// --- МАРШРУТ: GET /api/sites/:siteId/pages/:slug ---
// ============================================================================
router.get("/:siteId/pages/:slug", (req, res) => {
  // Получаем оба динамических параметра из URL.
  const { siteId, slug } = req.params;

  try {
    // 1. Читаем ВЕСЬ файл со страницами.
    const allPages = JSON.parse(readFileSync(pagesFilePath, "utf-8"));

    // 2. Ищем одну-единственную страницу, которая соответствует и siteId, и slug.
    // ❗️ Это может быть медленно, если страниц очень много.
    const page = allPages.find(
      (p: any) => p.siteId === siteId && p.slug === slug
    );

    // 3. Если нашли - отдаем. Если нет - ошибка 404.
    if (page) {
      res.json(page);
    } else {
      res.status(404).json({ error: "Страница не найдена" });
    }
  } catch (e) {
    res.status(500).json({ error: "Не удалось загрузить страницу" });
  }
});

export default router;
